const commentModel = require("../models/comment");
const herbsModel = require("../models/herbs");
const researchsModel = require("../models/research");
const newsModel = require("../models/news");
const blogModel = require("../models/blogs");

exports.addComments = async (req, res) => {
    try {
        const { type, mainId, user_id, content } = req.body;
        if (!type || !mainId || !user_id || !content) {
            return res.status(400).json({ err: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
        }

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á comment ‡πÉ‡∏´‡∏°‡πà
        const addNewComment = new commentModel({ content, user_id });
        const save = await addNewComment.save();
        const comment_id = save._id;

        if (!comment_id) {
            return res.status(400).json({ err: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ" });
        }

        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å model ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        const model = type === "herbs" ? herbsModel :
                      type === "news" ? newsModel : 
                      type === "blogs" ? blogModel :
                      researchsModel ;
        const mainData = await model.findById(mainId);
        if (!mainData) {
            await commentModel.findByIdAndDelete(comment_id);
            return res.status(400).json({ err: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ" });
        }

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï comment_id ‡πÉ‡∏ô mainData
        mainData.comment_id = [...(mainData.comment_id || []), comment_id];

        const updateMain = await mainData.save();
        if (!updateMain) {
            await commentModel.findByIdAndDelete(comment_id);
            return res.status(400).json({ err: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ" });
        }

        res.status(200).json({ mes: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß", comment_id });

    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
};


exports.getAllComments = async (req,res) => {
    try {
        const comments = await commentModel.find();
        res.status(200).json({comments});
    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
}

exports.updateComment = async (req,res) => {
    try {
        const id = req.params.id;
        if(!id)return res.status(400).json({err:"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ"});
        const update = await commentModel.findOneAndUpdate({_id:id},{...req.body});
        if(!update)return res.status(400).json({err:"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ"});
        res.status(200).json({mes:"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß"});
    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
}

exports.commentReport = async (req,res) => {
    try {
        const {id,report} = req.body;
        if(!id || report.length < 1)return res.json({err:"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"}).status(400);

        const comment = await commentModel.findOne({_id:id});
        if(!comment)return res.json({err:"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}).status(400);
        console.log("üöÄ ~ exports.commentReport= ~ comment:", comment)

        const update = await commentModel.findOneAndUpdate({_id:id},{report:[...comment.report,...report]});
        if(!update)return res.json({err:"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πà‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô"}).status(400);

        res.status(200).json({mes:"‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß"});
    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
}

exports.updateContent = async (req,res) => {
    try {
        const {id,content} = req.body;
        if(!id || !content)return res.json({err:"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}).status(400);

        const update = await commentModel.findOneAndUpdate({_id:id},{content});
        if(!update)return res.json({err:"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}).status(400);

        res.status(200).json({mes:"‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß"});
    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
}

exports.removeComment = async (req,res) => {
    try {
        const id = req.params.id;
        if(!id)return res.status(400).json({err:"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"});

        const del = await commentModel.findByIdAndDelete(id);
        if(!del)return res.status(400).json({err:"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"});

        res.status(200).json({mes:"‡∏•‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß"});
    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
}

exports.clearReport = async (req,res) => {
    try {
        const id = req.params.id;
        if(!id)return res.status(400).json({err:"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"});

        const clear = await commentModel.findOneAndUpdate({_id:id},{report:[]});
        if(!clear)return res.status(400).json({err:"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ"});

        res.status(200).json({mes:"‡∏•‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏ô‡∏µ‡πâ"});
        
    } catch (error) {
        console.error("üöÄ ~ addComments error:", error);
        res.status(500).json({ err: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" });
    }
}